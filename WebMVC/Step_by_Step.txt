B1: Tải về static web (HTML + CSS + JS): camping file
B2: Tạo project WebMVC (ASP.NET)
B3: Tạo thư mục Statics: để lưu trữ tất cả các tệp static của web
B4: Copy nguyên thư mục camping vào thư mục Statics

B5: Vào thư mục View/Shared
- Tạo mới một tệp view Razor để làm bố cục mặc định thay thế cho _Layout.cshtml
- Đặt tên view Razor mới là _Base.cshtml

B6: Tạo 1 đoạn HTML5 cơ bản cho view _Base
<!DOCTYPE html>
<html>
<head>
    <title>Trang Base</title>
</head>
<body>
    <h1>Đây là tiêu đề</h1>
    <p>Đây là các đoạn nội dung</p>
     @RenderBody()
</body>
</html>

B7: Vào tệp _ViewStart.cshtml
- Chỉnh sửa thay đổi _Layout => _Base
- Run chương trình để Test thay đổi sử dụng Layout _Base thành công.

B8: Sao chép toàn bộ source HTML ở caming/index.html vào _Base.cshtml
B9: Giữ lại phàn source HTML dùng chung để tạo bố cục chuẩn cho Layout
Ex: Giữ lại các tag <header> và <footer>

Lưu ý: Khi chưa cấu hình thiết lập staticfile chuẩn cho thư viện mới thì giao diện bị lỗi hiển thi CSS, JS (404)

B10: Vào file Program
- Bổ sung cấu hình MidderWare UseStaticFile() và thêm tùy chỉnh thư mục static cho theme
app.UseStaticFiles(new StaticFileOptions()
{
    FileProvider = new PhysicalFileProvider(
            Path.Combine(Directory.GetCurrentDirectory(), @"Statics")),
    RequestPath = new PathString("/statics")
});

B11: Thay thế đường dẫn mới để path đến các tệp static file chuẩn
- Gốc:  /css/...
        /font/...
        /images/...
- Mới:  ~/statics/camping/css/....
        ~/statics/camping/font/...
        ~/statics/camping/images/...

Run chương trình để kiểm tra lỗi

B12: Hoàn thiện thêm các trang Giới thiệu, Liên hệ...vv


__________________________________________
ĐỌC + GHI DỮ LIỆU VÀO FILE EXCEL (TẠM THỜI TƯƠNG TÁC QUA RAZOR)
THỰC HIỆN THAO TÁC TRÊN WEB

B1: Tạo class cho đối tượng SinhVien trong thư mục Models
B2: Tạo class hành động cho đối tượng SinhVien trong thư mục Models --> Đặt tên là SinhVienActions
- Xây dựng khung hành động cho đối tượng SinhVien
- Cụ thể:
+) Khai báo kết nối đến tệp excel hoặc db
+) Lấy về danh sách
+) Lấy về một bản ghi theo ID
+) Thêm mới một bản ghi
+) Cập nhật thông tin cho bản ghi theo ID
+) Xóa tất cả
+) Xóa một bản ghi theo ID

B3: Tạo thư mục Datas và thêm file excel ds_sinhvien.xlsx vào thư mục

B4: SinhVienActions: Viết phần khai báo đường dẫn file excel & định nghĩa một hàm để lấy thông tin file excel

private string filePath = @"C:\Users\hoatx\Source\Repos\67IT-ASP.NET\WebMVC\Datas\ds_sinhvien.xlsx";

// Đây là hàm lấy về file Excel dạng FileStream thông qua sử dụng cái đối tượng FileInfo
// Xem thêm ví dụ ở BT3
// Mỗi lần hàm GetFileExcel được gọi sẽ trả về dữ liệu file excel đã được đọc.
private FileInfo GetFileExcel()
{
    return new FileInfo(filePath);
}

- Lưu ý khi sử dụng thư viện EPPlus thiết lấp sử dụng LicenseContext


B5: SinhVienActions: Viết hàm GetAll() lấy về tất cả danh sách sinh viên
public List<SinhVien> GetAll()
{
    var ds_sv = new List<SinhVien>();

    // Thiết lập LicenseContext
    //ExcelPackage.LicenseContext = LicenseContext.NonCommercial;
    OfficeOpenXml.ExcelPackage.LicenseContext = OfficeOpenXml.LicenseContext.NonCommercial;

    var file_excel = GetFileExcel();

    using (var package = new ExcelPackage(file_excel))
    {
        var worksheet = package.Workbook.Worksheets[0]; // Lấy về sheet đầu tiên
        var rowCount = worksheet.Dimension.Rows; // Đếm số dòng trong excel (có dữ liệu
        var colCount = worksheet.Dimension.Columns;

        for (int row = 2; row <= rowCount; row++) // Mỗi một dong trong danh là một sinh viên
        {
            // Ex Row Data: 0 |   1   |    2       | 3  | ....
            // Ex Row Data: 1 | 11234 | Nguyễn Văn | An | ....
            SinhVien sv = new SinhVien();
            sv.Tt = Int32.Parse(worksheet.Cells[row, 1].Text);
            sv.Cccd = worksheet.Cells[row, 2].Text;
            sv.Hodem = worksheet.Cells[row, 3].Text;
            sv.Ten = worksheet.Cells[row, 4].Text;
            sv.Nickname = worksheet.Cells[row, 5].Text;
            sv.Email = worksheet.Cells[row, 6].Text;
            sv.Dienthoai = worksheet.Cells[row, 7].Text;
            sv.Diem_tichluy = Double.Parse(worksheet.Cells[row, 8].Text);
            sv.Diem_renluyen = Double.Parse(worksheet.Cells[row, 9].Text);

            ds_sv.Add(sv);
        }
    }

    return ds_sv;
}

B6: Tạo SinhVienController
- Mỗi khi SinhVienController được khởi tạo sẽ khởi tạo hành động đối với sinh viên

private readonly SinhVienActions _svActions;
// Hàm khởi tạo SinhVienController
public SinhVienController()
{
    _svActions = new SinhVienActions(); // Khởi tạo SinhVienActions
}

B7: SinhVienController: tạo IActionResult Index() --> trả về xem danh sách SinhVien

public IActionResult Index()
{
    var dsSinhVien = _svActions.GetAll(); // Lấy tất cả sinh viên
    return View(dsSinhVien); // Trả về view với danh sách sinh viên
}


B8: Tạo view Index.cshtml --> hiển thị danh sách sinh viên

@model List<SinhVien>

@{
    ViewData["Title"] = "Danh Sách Sinh Viên";
}

<h1>@ViewData["Title"]</h1>

<table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>CCCD</th>
            <th>HỌ VÀ TÊN</th>
            <th>NICKNAME</th>
            <th>EMAIL</th>
            <th>ĐIỆN THOẠI</th>
            <th>ĐIỂM TÍCH LŨY</th>
            <th>ĐIỂM RÈN LUYỆN</th>
            <th>HÀNH ĐỘNG</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var sv in Model)
        {
            <tr>
                <td>@sv.Tt</td>
                <td>@sv.Cccd</td>
                <td>@sv.Hodem @sv.Ten</td>
                <td>@sv.Nickname</td>
                <td>@sv.Email</td>
                <td>@sv.Dienthoai</td>
                <td>@sv.Diem_tichluy</td>
                <td>@sv.Diem_renluyen</td>
                <td>
                    @* <a asp-action="Edit" asp-route-id="@sv.Tt">Edit</a> *@
                    <button 
                        type="button" 
                        class="btn btn-primary" 
                        onclick="location.href='@Url.Action("Edit", "SinhVien", new { id = sv.Tt })'">Chỉnh sửa</button>

                    <form asp-action="Delete" asp-route-id="@sv.Tt" method="post" style="display:inline;">
                        <button type="submit" class="btn btn-danger" onclick="return confirm('Bạn có chắc chắn muốn xóa?');">Delete</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>